# https://github.com/KevinOConnor/klipper/pull/4328/files#diff-2930d37d8143c91ff5f6a8e550831e09400c2107d71767e809d9fbe535edb2e5R1
[dockable_probe]
pin: ^PA3
x_offset: 0         # offset for microswitch x direction off nozzle
y_offset: 25      # offset for microswitch y direction off nozzle
z_offset: 0         # offset for microswitch in z height
samples: 3
sample_retract_dist: 15 # this is so the machine has time for the switch to reset properly, especially with a higher retract speed
samples_result: median
samples_tolerance: 0.04
samples_tolerance_retries: 3
speed: 5 # do not go higher than 10mm/s, you will destroy the switch
lift_speed: 20

dock_position: 106,300,20
#   The physical position of the probe dock relative to the origin of
#   the bed. The coordinates are specified as a comma separated x, y, z
#   list of values. Certain dock designs are independent of the z axis.
#   if a z value is provided for these configurations, the z axis will
#   be raised to that amount in order to prevent collisions.
#   This parameter is required.
approach_position: 106,275
#   The X,Y position where the toolhead needs to be prior to moving into the
#   dock so that the probe is aligned properly for docking or attaching.
#   This parameter is required.
detach_position: 157,300
#   Similar to the approach_position, the detach_position is the X,Y
#   where the toolhead is moved after the probe has been docked.
#   For magnetically coupled probes, this is typically perpendicular to
#   the approach_position in a direction that does not cause the tool to
#   collide with the printer.
#   This parameter is required
# safe_z_position: 150,150
#   Optional parameter. If the probe is being used to home the Z
#   axis, the toolhead will move to these xy coordinates prior to homing.
#   If this value is not provided, the center of the bed will be used.
dock_retries: 2
#   The number of times to attempt to attach/dock the probe before raising
#   and error and aborting probing.
attach_speed: 20
detach_speed: 100
travel_speed: 300
#   Optional speeds used during various moves. These will default to probe
#   speed if not specified.
check_open_attach: True 
#   The probe status should be verified prior to homing. Setting this option
#   to true will ensure the probe "endstop" is "open" if the probe is attached
#   and will abort probing if it reports "triggered" when docked
#probe_sense_pin:
#   This supplemental pin can be defined to determine an attached state
#   instead of check_open_attach
#dock_sense_pin:
#   This supplemental pin can be defined to determine a docked state in
#   addition to probe_sense_pin or check_open_attach
# allow_delayed_detach: False
#   When true, the probe will stay attached to the toolhead after the
#   completion of a command in case there is another command requiring the
#   use of the probe in the command queue. Once all commands have completed,
#   the probe is docked. It is recommended to add the DETACH_PROBE command to
#   macros and slicer start gcode to ensure the probe is correctly detached.
#   See Annexed_Probe.md for more information
dock_fixed_z: True
#   Whether or not the dock is located independently of the Z axis such as
#   mounted to a moving gantry.

# pre_attach_gcode: {action_respond_info('dockable_probe:pre_attach')}
#   An optional list of gcode commands to execute prior to attaching the probe
attach_gcode: {action_respond_info('dockable_probe:attach')}
#   An optional list of gcode commands used to attach the probe
# post_attach_gcode: {action_respond_info('dockable_probe:post_attach')}
#   An optional list of gcode commands to execute immediately after attaching
#   the probe
# pre_detach_gcode: {action_respond_info('dockable_probe:pre_detach')}
#   An optional list of gcode commands to execute prior to detaching/docking
#   the probe
detach_gcode: {action_respond_info('dockable_probe:detach')}
#   An optional list of gcode commands used to detach/dock the probe
# post_detach_gcode: {action_respond_info('dockable_probe:post_detach')}
#   An optional list of gcode commands to execute immediately after
#   detaching/docking the probe

[quad_gantry_level]
gantry_corners:
	-60,-10
	360,370
#   A newline separated list of X,Y coordinates describing the two
#   opposing corners of the gantry. The first entry corresponds to Z,
#   the second to Z2. This parameter must be provided.
points:
	50,25
	50,225
	250,225
	250,25
#   A newline separated list of four X,Y points that should be probed
#   during a QUAD_GANTRY_LEVEL command. Order of the locations is
#   important, and should correspond to Z, Z1, Z2, and Z3 location in
#   order. This parameter must be provided. For maximum accuracy,
#   ensure your probe offsets are configured.
speed: 100
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 20
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
max_adjust: 10
#   Safety limit if an adjustment greater than this value is requested
#   quad_gantry_level will abort.
retries: 5
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance.

[bed_mesh]
speed: 300
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 20
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#mesh_radius:
#   Defines the radius of the mesh to probe for round beds. Note that
#   the radius is relative to the coordinate specified by the
#   mesh_origin option. This parameter must be provided for round beds
#   and omitted for rectangular beds.
#mesh_origin:
#   Defines the center x,y coordinate of the mesh for round beds. This
#   coordinate is relative to the probe's location. It may be useful
#   to adjust the mesh_origin in an effort to maximize the size of the
#   mesh radius. Default is 0,0. This parameter must be omitted for
#   rectangular beds.
mesh_min: 40,40
#   Defines the minimum x,y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_max: 260,260
#   Defines the maximum x,y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
probe_count: 5,5
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3,3.
#round_probe_count: 5
#   For round beds, this integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
fade_start: 0.6
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
fade_end: 10.0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2,2.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
relative_reference_index: 12
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.