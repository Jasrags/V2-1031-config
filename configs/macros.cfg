#####################################################################
#	Macros
#####################################################################

# [gcode_shell_command pushover_print_complete]
# command: /home/pi/klipper_config/pushover.sh -t "Pronter" Print Complete
# timeout: 30.0
# verbose: True

# [gcode_macro PUSHOVER_PRINT_COMPLETE]
# gcode:
#   RUN_SHELL_COMMAND CMD=pushover_print_complete

# [gcode_shell_command backup_cfg]
# command: sh /home/pi/klipper_config/autocommit.sh
# timeout: 30.0
# verbose: True

# [gcode_macro BACKUP_CFG]
# gcode:
#   RUN_SHELL_COMMAND CMD=backup_cfg

# # Conditional G28
# [gcode_macro CG28]
# gcode:
#   {% if printer.toolhead.homed_axes != "xyz" %}
#     LOWERCURRENT
#     G90
#     G28
#     RESETCURRENT
#   {% endif %}

# [gcode_macro PREHEAT_CHAMBER]
# gcode:
#   #Parameters
#   {% set bed = params.BED|default(113)|int %}
#   {% set extruder = params.EXTRUDER|default(150)|int %}
#   {% set chamber = params.CHAMBER|default(42)|int %}
#   {% set soak = params.SOAK|default(0)|int %}

#   orange
#   M117 Preheat Start
#   G0 Z20 F600                                                             # Move nozzle to a safe travel height
#   G0 X150 Y150 Z20 F12000                                                 # Go to center of 300 x 300 bed
#   M106 S255                                                               # Turn on Part Cooling Fans to 100%
#   CIRCULATION_START
#   M117 Heating ~bed~ {bed}~degrees~
#   M190 S{bed}                     
#   M117 Heating ~extruder~ {extruder}~degrees~                             # set bed temp and wait for it reach temp
#   M109 S{extruder}                                                        # M109 heat and wait for it to reach temp

#   {% if soak > 0 and (printer.heater_bed.target <= (bed - 20)) %}
#     {% for timer in range(soak|int,0,-1) %}
#       M117 Soaking ~bed~ {timer|int}m                                     # let the bed soak a bit more
#       M105
#       G4 P60000
#     {% endfor %}
#   {% endif %}

#   {% if chamber > 0 and printer['temperature_sensor chamber'].temperature < chamber %}
#     M117 Soaking ~chamber~ {chamber}~degrees~
#     TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}  # make sure we hit chamber temp
#   {% endif %}

#   red
#   M117 Preheat Done
#   SONG_SINGLE_BEEP

# [gcode_macro CIRCULATION_START]
# default_parameter_NEVERMORE_SPEED: 0.3     
# default_parameter_EXAUST_SPEED: 0.3
# gcode:
#     SET_FAN_SPEED FAN=nevermore_fan SPEED={NEVERMORE_SPEED} 
#     SET_FAN_SPEED FAN=exhaust_fan SPEED={EXAUST_SPEED} 

# [gcode_macro CIRCULATION_END]
# gcode:
#     SET_FAN_SPEED FAN=nevermore_fan SPEED=0 
#     SET_FAN_SPEED FAN=exhaust_fan SPEED=0

# [gcode_macro RESET_EXTRUDER]
# gcode:
#   G92 E0 ; reset extruder

# [gcode_macro PRINT_END]
# gcode:
#   M400                            # wait for buffer to clear
#   G92 E0                          # zero the extruder
#   G1 E-10.0 F3600                 # retract filament
#   G91                             # relative positioning
#   G0 Z1.00 X20.0 Y20.0 F20000     # move nozzle to remove stringing
#   TURN_OFF_HEATERS
#   M107                            # turn off fan
#   G1 Z2 F3000                     # move nozzle up 2mm
#   G90                             # absolute positioning
#   G0 X125 Y250 F3600              # park nozzle at rear
#   BED_MESH_CLEAR
#   CIRCULATION_END
#   M84                             # disable steppers
#   M117                            # clear display
#   SONG_SINGLE_BEEP
#   PUSHOVER_PRINT_COMPLETE

# [gcode_macro LED_ON]
# gcode: 
#   white

# [gcode_macro PURGE_LINE]
# #   A purge line on the left of the bed to prime the extruder
# gcode:
#   G92 E0                          # zero/reset extruder
#   G1 X2.2 Y20 Z0.3 F18000         # move to start position
#   G1 E+15 F150                    # extrude to put the pressure (-20 from purge macro)
#   G92 E0

#   G1 X2.2 Y200 Z0.25 F1500 E10    # extrude the first line
#   G1 X2.5 Y200 Z0.3 F18000        # move to side a little
#   G1 X2.5 Y20 Z0.25 F1500.0 E20   # extrude the second line
#   G92 E0                          # zero/reset extruder
#   G1 Z2.0 E-0.1 F3000             # move nozzle up and retract tiny bit
#   G92 E0 
    
# [gcode_macro _LOWER_CURRENT]
# gcode:
#   SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.35 HOLDCURRENT=0.35        # lower z stepper current (in case of crash)
#   SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.35 HOLDCURRENT=0.35
#   SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.35 HOLDCURRENT=0.35
#   SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 HOLDCURRENT=0.35

# [gcode_macro _RESET_CURRENT]
# gcode:
#   SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
#   SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
#   SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
#   SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}    

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# default_parameter_X: 230    #edit to your park position
# default_parameter_Y: 230    #edit to your park position
# default_parameter_Z: 10     #edit to your park position
# default_parameter_E: 1      #edit to your retract length
# gcode:
#   SAVE_GCODE_STATE NAME=PAUSE_state
#   BASE_PAUSE
#   G91
#   {% if printer.extruder.temperature > 180 %}
#     G1 E-{E} F2100
#   {% endif %} 
#   G1 Z{Z}
#   G90
#   G1 X{X} Y{Y} F6000

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# default_parameter_E: 1      #edit to your retract length
# gcode:
#   G91
#   G1 E{E} F2100
#   G90
#   RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#   BASE_RESUME
 
# # Park bed for heatsoaking
# [gcode_macro PARK]
# default_parameter_FORCE: 0
# gcode:
#   {% if printer.idle_timeout.state != "Printing" or FORCE|int == 1 %}
#     _CG28                            # Home if not already homed
#     SAVE_GCODE_STATE NAME=PARK
#     G90                             # absolute positioning
#     G0 X150 Y150 Z30 F5000          # Move to position
#     RESTORE_GCODE_STATE NAME=PARK
#   {% else %}
#     { action_respond_info("PARK disabled while printing!") }
#   {% endif %}

# # Park front for maintenance / cleaning
# [gcode_macro PARK_FRONT]
# gcode:
#   {% if printer.idle_timeout.state != "Printing" %}
#     _CG28                            # Home if not already homed
#     SAVE_GCODE_STATE NAME=PARK_FRONT
#     G90                             # absolute coords
#     G1 Z100 X150 Y0 F5000           # Move to position
#     RESTORE_GCODE_STATE NAME=PARK_FRONT
#   {% else %}
#     { action_respond_info("PARKFRONT disabled while printing!") }
#   {% endif %}



# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# # change this if you need more or less extrusion
# variable_extrude: 1.0
# gcode:
#   ##### read E from pause macro #####
#   {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#   ##### set park positon for x and y #####
#   # default is your max posion from your printer.cfg
#   {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#   {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#   ##### calculate save lift position #####
#   {% set max_z = printer.toolhead.axis_maximum.z|float %}
#   {% set act_z = printer.toolhead.position.z|float %}
#   {% if act_z < (max_z - 2.0) %}
#       {% set z_safe = 2.0 %}
#   {% else %}
#       {% set z_safe = max_z - act_z %}
#   {% endif %}
#   ##### end of definitions #####
#   SAVE_GCODE_STATE NAME=PAUSE_state
#   BASE_PAUSE
#   G91
#   G1 E-{E} F2100
#   G1 Z{z_safe} F900
#   G90
#   G1 X{x_park} Y{y_park} F6000

# [gcode_macro CENTER_ALL]
# gcode:
#   G90
#   G1 X150 Y0 Z100 F30000

# [gcode_macro UNLOAD_FILAMENT_ABS]
# gcode:
#   SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
#   M109 S225                               # wait for extruder to cool down to prevent blob
#   M83                                     # set extruder to relative
#   #G1 E2 F300                             # (CAUSING CLOGS AT 10mm?) extrude a little to soften tip 
#   G1 E-50 F300                            # retract filament completely
#   G1 E-50 F1000                           # retract filament completely
#   RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT

# [gcode_macro LOAD_FILAMENT]
# gcode:
#   SAVE_GCODE_STATE NAME=LOAD_FILAMENT
#   M83                                     # set extruder to relative
#   G1 E45 F300                             # quickly load filament to down filament path
#   G1 E40 F300                             # slower extrusion for hotend path / prime
#   RESTORE_GCODE_STATE NAME=LOAD_FILAMENT

# [gcode_macro PREHEAT_ABS]
# gcode:
#   SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240
#   SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110

######################################################################
# Filament Change
######################################################################

# # M600: Filament Change. This macro will pause the printer, move the
# # tool to the change position, and retract the filament 50mm. Adjust
# # the retraction settings for your own extruder. After filament has
# # been changed, the print can be resumed from its previous position
# # with the "RESUME" gcode.

# [gcode_macro M600]
# variable_paused: True
# default_parameter_X: 125
# default_parameter_Y: 125
# default_parameter_Z: 10
# gcode:
#   SAVE_GCODE_STATE NAME=M600_state
#   BASE_PAUSE
#   G91
#   G1 E-.8 F2700
#   G1 Z{Z}
#   SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=x VALUE={printer.gcode_move.gcode_position.x} 
#   SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=y VALUE={printer.gcode_move.gcode_position.y} 
#   SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=z VALUE={printer.gcode_move.gcode_position.z} 
#   G90
#   G1 X{X} Y{Y} F3000
#   G91
#   G1 E-67 F1000
#   SET_GCODE_VARIABLE MACRO=M600 VARIABLE=paused VALUE=True 
#   RESTORE_GCODE_STATE NAME=M600_state  

# [gcode_macro RESUME_M600]
# variable_x: 125 
# variable_y: 125 
# variable_z: 125 
# gcode:
#   SET_GCODE_VARIABLE MACRO=M600 VARIABLE=paused VALUE=False
#   SAVE_GCODE_STATE NAME=RESUME_M600_state
#   G90
#   G1 X75 Y253 F6000
#   G91
#   G1 E67 F1000
#   PURGE_N_BRUSH EXTRUDER={printer.extruder.target} PURGE=100
#   G90
#   G1 Z{z}
#   G1 X{x} Y{y} F6000
#   RESTORE_GCODE_STATE NAME=RESUME_M600_state  
#   BASE_RESUME

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# gcode:
#   ##### read E from pause macro #####
#   {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#   ##### end of definitions #####
#   G91
#   G1 E{E} F2100
#   RESTORE_GCODE_STATE NAME=PAUSE_state
#   BASE_RESUME

# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
#   TURN_OFF_HEATERS
#   CLEAR_PAUSE
#   SDCARD_RESET_FILE
#   PRINT_END
#   BASE_CANCEL_PRINT

# [gcode_macro DUMP_PARAMETERS]
# description: Dump all Klipper parameters to terminal
# gcode:
#   {% set parameters = namespace(output = '') %}
#   {% for name1 in printer %}
#     {% for name2 in printer[name1] %}
#       {% set donotwant = ['bed_mesh','configfile'] %}
#       {% if name1 is not in donotwant %}
#         {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
#         {% set parameters.output = parameters.output +  param + "\n" %}
#       {% endif %}
#       {% else %}
#         {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
#         {% set parameters.output = parameters.output +  param + "\n" %}
#     {% endfor %}
#   {% endfor %}
#   {action_respond_info(parameters.output)}

# # Compare the GET_POSITION output before and after, see if you skipped steps. IIRC you want the "mcu" line to show within 16 before and after (a full step)
# [gcode_macro SPEED_TEST]
# gcode:
#   #Parameters
#   {% set i = params.I|default(1)|int %}
#   {% set da = params.DIAGONAL_ACCEL|default(F27000)|int %}
#   {% set la = params.LINEAR_ACCEL|default(F36000)|int %}
  
#   SAVE_GCODE_STATE NAME=SPEED_TEST
#   G28 X Y
#   GET_POSITION
#   G90
#   {% for iteration in range(i|int) %}
#     G1 X0 Y0     F{da}
#     G1 X290 Y290 F{da}
#     G1 X0 Y0     F{da}
#     G1 X290 Y290 F{da}

#     G1 X0 Y290 F{la}

#     G1 X290 Y0 F{da}
#     G1 X0 Y290 F{da}
#     G1 X290 Y0 F{da}
#     G1 X0 Y290 F{da}

#     G1 X0 Y0 F{la}
#     G1 X290 Y0 F{la}
#     G1 X290 Y290 F{la}
#     G1 X0 Y290 F{la}
#     G1 X0 Y0 F{la}
#   {% endfor %}
#   G28 X Y
#   GET_POSITION
#   RESTORE_GCODE_STATE NAME=SPEED_TEST
